Servlet to Servlet Communication
================================
Servlet to servlet communication is also know as servlet chaining.

Servlet to Servlet communication is possible in three ways.

1) Forwarding the request

2) Including the response 

3) Send Redirection 

1) Forwarding the request
-------------------------
In forwarding the request, the output of source servlet program will be discarded and output of destination servlet program goes to brower window as dynamic response.

To forward the request we need to use RequestDispatcher object.

We can create RequestDispatcher object as follow.
ex:
	RequestDispatcher rd=req.getRequestDispatcher();
	rd.forward(req,res);


2) Including the response 
------------------------
In including the response, the output of source servlet and destination servlet program combinely goes to browser window as dynamic response.

To perform including the response we need to take the support of RequestDispatcher object.

We can create RequestDispatcher object as follow.
ex:
	RequestDispatcher rd=req.getRequestDispatcher();
	rd.include(req,res);


Deployment Directory structure
---------------------------
STSApp1
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|---TestSrv1.java
			|---TestSrv2.java
|---Web Content
	|
	|------form.html
	|
	|------WEB-INF
		|
		|----web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.


form.html
---------

<form action="test1" method="GET">
	
	UserName: <input type="text" name="t1"/> <br> 
	
	Password: <input type="password" name="t2"/> <br>
	
	<input type="submit" value="submit"/>
	
</form>


web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv1</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv1</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv1</servlet-name>
  	<url-pattern>/test1</url-pattern>
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>TestSrv2</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv2</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv2</servlet-name>
  	<url-pattern>/test2</url-pattern>
  </servlet-mapping>
 
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>
	
TestSrv1.java
---------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv1 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String name=req.getParameter("t1");
		String pass=req.getParameter("t2");
		
		if(pass.equals("admin"))
		{
			RequestDispatcher rd=req.getRequestDispatcher("test2");
			rd.forward(req, res);
		}
		else
		{
			pw.println("<b style='color:red'> Sorry! Incorrect username or password </b>");
			RequestDispatcher rd=req.getRequestDispatcher("form.html");
			rd.include(req, res);
		}
		
		pw.close();
	}
}

TestSrv2.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv2 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		pw.println("<center><h1>Thank you for login successfully.</h1></center>");
		
		pw.close();
	}
}

Request url
------------
	http://localhost:2525/STSApp1/



3) Send Redirection 
====================
It is used to forward the request to the application which is present in same server or different server.

It always sends new request.

It uses browser window to send the request.

It will work inside as well as outside of the server.

We can perform send redirection as follow.
ex:
	res.sendRedirect("url");


Deployment Directory structure
-------------------------------
STSApp2
|
|---Java Resources
	|
	|------src
		|
		|---com.ihub.www
			|
			|----TestSrv.java
|---Web Content
|	|
	|------index.html
	|
	|------WEB-INF
		|
		|-----web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

index.html
----------

<center>
	<h1>
			<a href="test?t1=flights"> Flights </a> <br><br>
			
			<a href="test?t1=hotels"> Hotels </a>  <br><br>
			
			<a href="test?t1=railways"> Trains </a>  <br><br>
	
	</h1>
</center>

web.xml
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv</servlet-name>
  	<url-pattern>/test</url-pattern>
  </servlet-mapping> 
  
  
  <welcome-file-list>
  	<welcome-file>index.html</welcome-file>
  </welcome-file-list>
  	
  
</web-app>

TestSrv.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		String val=req.getParameter("t1");
		
		res.sendRedirect("https://www.makemytrip.com/"+val);
		
		pw.close();
	}
}

Request url
-----------
	http://localhost:2525/STSApp2/


Stateless Behaviour of web application
=======================================
Diagram: servlet8.1

Above application demostrate stateless behaviour of web application.

In stateless behaviour of web application, no web resource programs can access previous request data while processing the current request.

To overcome this limitation we need to use Session Tracking.

Deployment Directory structure
------------------------------
StatelessApp
|
|---Java Resources
	|
	|------src
		|
		|----com.ihub.www
			|
			|----TestSrv1.java
			|----TestSrv2.java
|---Web Content
|	|
	|------form.html
	|
	|------WEB-INF
		|
		|-----web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.


form.html
----------

<form action="test1" method="GET">
	
	Name: <input type="text" name="t1"/> <br>
	
	Father Name : <input type="text" name="t2"/> <br>
	
	Maritial Status : 
	<input type="checkbox" name="t3" value="married"/> MARRIED
	<input type="checkbox" name="t3" value="single"/>  SINGLE  <br>
	
	<input type="submit" value="submit"/>

</form>

web.xml
------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">
  
  <servlet>
  	<servlet-name>TestSrv1</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv1</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv1</servlet-name>
  	<url-pattern>/test1</url-pattern> 
  </servlet-mapping>
  
  <servlet>
  	<servlet-name>TestSrv2</servlet-name>
  	<servlet-class>com.ihub.www.TestSrv2</servlet-class>
  </servlet>
  <servlet-mapping>
  	<servlet-name>TestSrv2</servlet-name>
  	<url-pattern>/test2</url-pattern> 
  </servlet-mapping>
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
</web-app>

TestSrv1.java
-------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv1 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form data 
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		if(ms.equals("married"))
		{
			pw.println("<form action='test2' method='GET'>");
			pw.println("Spouse Name : <input type='text' name='f2t1'/> <br>");
			pw.println("No of Child : <input type='text' name='f2t2'/> <br>");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		else
		{
			pw.println("<form action='test2' method='GET'>");
			pw.println("When will u marry : <input type='text' name='f2t1'/> <br>");
			pw.println("Why will u marry : <input type='text' name='f2t2'/> <br>");
			pw.println("<input type='submit' value='submit'/>");
			pw.println("</form>");
		}
		pw.close();
		
	}
}


TestSrv2.java
------------
package com.ihub.www;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class TestSrv2 extends HttpServlet 
{
	protected void doGet(HttpServletRequest req,HttpServletResponse res)throws ServletException,IOException
	{
		PrintWriter pw=res.getWriter();
		res.setContentType("text/html");
		
		//reading form1 data 
		String name=req.getParameter("t1");
		String fname=req.getParameter("t2");
		String ms=req.getParameter("t3");
		
		//reading form2 data
		String val1=req.getParameter("f2t1");
		String val2=req.getParameter("f2t2");
		
		pw.println("Form1 Data : "+name+" "+fname+" "+ms+"<br>");
		pw.println("Form2 Data : "+val1+" "+val2+"<br>");
		
		pw.close();
		
	}
}

Request url
---------
	http://localhost:2525/StatelessApp/
	










































































































